/* Generated By:JavaCC: Do not edit this line. MiniJavaParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniJavaParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 1;
  /** RegularExpression Id. */
  int ELSE = 2;
  /** RegularExpression Id. */
  int WHILE = 3;
  /** RegularExpression Id. */
  int CLASS = 4;
  /** RegularExpression Id. */
  int PUBLIC = 5;
  /** RegularExpression Id. */
  int STATIC = 6;
  /** RegularExpression Id. */
  int VOID = 7;
  /** RegularExpression Id. */
  int MAIN = 8;
  /** RegularExpression Id. */
  int STRING = 9;
  /** RegularExpression Id. */
  int EXTENDS = 10;
  /** RegularExpression Id. */
  int RETURN = 11;
  /** RegularExpression Id. */
  int TYPEBOOL = 12;
  /** RegularExpression Id. */
  int PRINT = 13;
  /** RegularExpression Id. */
  int LENGTH = 14;
  /** RegularExpression Id. */
  int NEW = 15;
  /** RegularExpression Id. */
  int THIS = 16;
  /** RegularExpression Id. */
  int TYPEINT = 17;
  /** RegularExpression Id. */
  int IntLiteral = 18;
  /** RegularExpression Id. */
  int BOOL_LITERAL = 19;
  /** RegularExpression Id. */
  int CURLYOPEN = 20;
  /** RegularExpression Id. */
  int CURLYCLOSE = 21;
  /** RegularExpression Id. */
  int PAROPEN = 22;
  /** RegularExpression Id. */
  int PARCLOSE = 23;
  /** RegularExpression Id. */
  int SQBOPEN = 24;
  /** RegularExpression Id. */
  int SQBCLOSE = 25;
  /** RegularExpression Id. */
  int SEMICOLON = 26;
  /** RegularExpression Id. */
  int AND = 27;
  /** RegularExpression Id. */
  int LESSTHAN = 28;
  /** RegularExpression Id. */
  int PLUS = 29;
  /** RegularExpression Id. */
  int MINUS = 30;
  /** RegularExpression Id. */
  int TIMES = 31;
  /** RegularExpression Id. */
  int DOT = 32;
  /** RegularExpression Id. */
  int COMMA = 33;
  /** RegularExpression Id. */
  int EXCMARK = 34;
  /** RegularExpression Id. */
  int EQUAL = 35;
  /** RegularExpression Id. */
  int JAVAKEYWORD = 36;
  /** RegularExpression Id. */
  int INVALID = 37;
  /** RegularExpression Id. */
  int IDENTIFIER = 38;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"class\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"String\"",
    "\"extends\"",
    "\"return\"",
    "\"boolean\"",
    "\"System.out.println\"",
    "\"length\"",
    "\"new\"",
    "\"this\"",
    "\"int\"",
    "<IntLiteral>",
    "<BOOL_LITERAL>",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\"&&\"",
    "\"<\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\".\"",
    "\",\"",
    "\"!\"",
    "\"=\"",
    "<JAVAKEYWORD>",
    "<INVALID>",
    "<IDENTIFIER>",
    "<token of kind 39>",
    "<token of kind 40>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
  };

}
